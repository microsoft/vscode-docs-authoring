{
	"name": "docs-markdown",
	"displayName": "docs-markdown",
	"description": "Docs Markdown Extension",
	"icon": "images/docs-logo-ms.png",
	"aiKey": "0a0e5961-85c2-451a-bce8-6a54e37c93be",
	"version": "0.2.80",
	"publisher": "docsmsft",
	"homepage": "https://github.com/Microsoft/vscode-docs-authoring/tree/master/docs-markdown",
	"bugs": {
		"url": "https://github.com/Microsoft/vscode-docs-authoring/issues"
	},
	"engines": {
		"vscode": "^1.47.0"
	},
	"repository": {
		"url": "https://github.com/Microsoft/vscode-docs-authoring.git"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"markdown"
	],
	"activationEvents": [
		"onLanguage:json",
		"onLanguage:markdown",
		"onLanguage:yaml"
	],
	"main": "./dist/extension",
	"contributes": {
		"commands": [
			{
				"command": "insertMoniker",
				"title": "Add moniker range",
				"category": "Docs"
			},
			{
				"command": "insertNotebook",
				"title": "Insert Jupyter notebook",
				"category": "Docs"
			},
			{
				"command": "updateNotebook",
				"title": "Update Jupyter notebook",
				"category": "Docs"
			},
			{
				"command": "markdownQuickPick",
				"title": "Docs: Markdown authoring menu"
			},
			{
				"command": "generateMasterRedirectionFile",
				"title": "Generate master redirection file",
				"category": "Docs"
			},
			{
				"command": "sortMasterRedirectionFile",
				"title": "Sort master redirection file",
				"category": "Docs"
			},
			{
				"command": "applyRedirectDaisyChainResolution",
				"title": "Resolve redirection file daisy-chains",
				"category": "Docs"
			},
			{
				"command": "detectInvalidDocumentIdRedirects",
				"title": "Fix invalid redirect_document_ids",
				"category": "Docs"
			},
			{
				"command": "removeDefaultValuesInRedirects",
				"title": "Remove default redirect_document_id values",
				"category": "Docs"
			},
			{
				"command": "formatBold",
				"title": "Bold",
				"category": "Docs"
			},
			{
				"command": "formatItalic",
				"title": "Italic",
				"category": "Docs"
			},
			{
				"command": "formatCode",
				"title": "Code",
				"category": "Docs"
			},
			{
				"command": "insertAlert",
				"title": "Alert",
				"category": "Docs"
			},
			{
				"command": "insertNumberedList",
				"title": "Numbered list",
				"category": "Docs"
			},
			{
				"command": "insertBulletedList",
				"title": "Bulleted list",
				"category": "Docs"
			},
			{
				"command": "insertTable",
				"title": "Table",
				"category": "Docs"
			},
			{
				"command": "distributeTable",
				"title": "Evenly distribute selected table",
				"category": "Docs"
			},
			{
				"command": "consolidateTable",
				"title": "Consolidate selected table",
				"category": "Docs"
			},
			{
				"command": "selectLinkType",
				"title": "Link to heading",
				"category": "Docs"
			},
			{
				"command": "noLocText",
				"title": "Non-localizable text",
				"category": "Docs"
			},
			{
				"command": "insertLink",
				"title": "Link to file in repo",
				"category": "Docs"
			},
			{
				"command": "insertURL",
				"title": "Link to web",
				"category": "Docs"
			},
			{
				"command": "applyImage",
				"title": "Image",
				"category": "Docs"
			},
			{
				"command": "applyIcon",
				"title": "Icon image",
				"category": "Docs"
			},
			{
				"command": "applyComplex",
				"title": "Complex image",
				"category": "Docs"
			},
			{
				"command": "applyLocScope",
				"title": "Add localization scope to image",
				"category": "Docs"
			},
			{
				"command": "applyLightbox",
				"title": "Add lightbox to image",
				"category": "Docs"
			},
			{
				"command": "insertInclude",
				"title": "Include",
				"category": "Docs"
			},
			{
				"command": "insertSnippet",
				"title": "Snippet",
				"category": "Docs"
			},
			{
				"command": "insertVideo",
				"title": "Video",
				"category": "Docs"
			},
			{
				"command": "previewTopic",
				"title": "Preview",
				"category": "Docs"
			},
			{
				"command": "applyCleanup",
				"title": "Cleanup...",
				"category": "Docs"
			},
			{
				"command": "insertTocEntry",
				"title": "TOC entry",
				"category": "Docs"
			},
			{
				"command": "insertTocEntryWithOptions",
				"title": "TOC entry with optional attributes",
				"category": "Docs"
			},
			{
				"command": "createParentNode",
				"title": "Create expandable parent node",
				"category": "Docs"
			},
			{
				"command": "applyXref",
				"title": "Link to Xref",
				"category": "Docs"
			},
			{
				"command": "insertRowsAndColumns",
				"title": "Columns",
				"category": "Docs"
			},
			{
				"command": "updateMetadataDate",
				"title": "Update \"ms.date\" Metadata Value",
				"category": "Docs"
			},
			{
				"command": "updateImplicitMetadataValues",
				"title": "Update Implicit Metadata Values",
				"category": "Docs"
			},
			{
				"command": "collapseRelativeLinks",
				"title": "Collapse relative links",
				"category": "Docs"
			},
			{
				"command": "collapseRelativeLinksInFolder",
				"title": "Collapse relative links in folder",
				"category": "Docs"
			},
			{
				"command": "sortSelectionAscending",
				"title": "Sort selection ascending (A to Z)",
				"category": "Docs"
			},
			{
				"command": "sortSelectionDescending",
				"title": "Sort selection descending (Z to A)",
				"category": "Docs"
			},
			{
				"command": "insertLanguageIdentifier",
				"title": "Insert language identifier",
				"category": "Docs"
			},
			{
				"command": "cleanupInFolder",
				"title": "Cleanup files in folder",
				"category": "Docs"
			},
			{
				"command": "cleanupFile",
				"title": "Cleanup file",
				"category": "Docs"
			}
		],
		"menus": {
			"editor/title": [
				{
					"when": "resourceLangId == markdown",
					"command": "markdown.showPreview",
					"alt": "markdown.showPreviewToSide",
					"group": "navigation"
				}
			],
			"editor/context": [
				{
					"when": "editorTextFocus && resourceLangId == markdown || resourceLangId == yaml",
					"command": "updateMetadataDate",
					"group": "1_modification"
				},
				{
					"when": "editorTextFocus && resourceLangId == markdown || resourceLangId == yaml",
					"command": "updateImplicitMetadataValues",
					"group": "1_modification"
				},
				{
					"when": "editorTextFocus && resourceLangId == markdown",
					"command": "collapseRelativeLinks",
					"group": "1_modification"
				},
				{
					"when": "editorHasSelection",
					"command": "sortSelectionAscending",
					"group": "1_modification"
				},
				{
					"when": "editorHasSelection",
					"command": "sortSelectionDescending",
					"group": "1_modification"
				},
				{
					"when": "editorHasSelection",
					"command": "distributeTable",
					"group": "1_modification"
				},
				{
					"when": "editorHasSelection",
					"command": "consolidateTable",
					"group": "1_modification"
				}
			],
			"explorer/context": [
				{
					"command": "collapseRelativeLinksInFolder",
					"group": "1_modification",
					"when": "explorerResourceIsFolder"
				},
				{
					"command": "cleanupInFolder",
					"group": "1_modification",
					"when": "explorerResourceIsFolder"
				},
				{
					"command": "cleanupFile",
					"group": "1_modification",
					"when": "resourceLangId == markdown && !listMultipleSelection"
				}
			],
			"commandPalette": [
				{
					"command": "markdownQuickPick"
				},
				{
					"command": "generateMasterRedirectionFile",
					"group": "Docs"
				},
				{
					"command": "sortMasterRedirectionFile",
					"group": "Docs"
				},
				{
					"command": "applyRedirectDaisyChainResolution",
					"group": "Docs"
				},
				{
					"command": "detectInvalidDocumentIdRedirects",
					"group": "Docs"
				},
				{
					"command": "removeDefaultValuesInRedirects",
					"group": "Docs"
				},
				{
					"command": "formatBold",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "formatItalic",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "formatCode",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "insertAlert",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "insertMoniker",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "insertNumberedList",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "insertBulletedList",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "insertTable",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "distributeTable",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "consolidateTable",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "selectLinkType",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "noLocText",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "noLocText",
					"group": "Docs",
					"when": "resourceLangId == yaml"
				},
				{
					"command": "insertLink",
					"group": "Docs",
					"when": "resourceLangId == markdown || resourceLangId == yaml"
				},
				{
					"command": "insertURL",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "applyImage",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "applyIcon",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "applyComplex",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "applyLocScope",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "applyLightbox",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "insertInclude",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "insertSnippet",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "insertVideo",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "applyCleanup",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "insertTocEntry",
					"group": "Docs",
					"when": "resourceLangId == yaml"
				},
				{
					"command": "insertTocEntryWithOptions",
					"group": "Docs",
					"when": "resourceLangId == yaml"
				},
				{
					"command": "createParentNode",
					"group": "Docs",
					"when": "resourceLangId == yaml"
				},
				{
					"command": "applyXref",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "insertRowsAndColumns",
					"group": "Docs",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "cleanupInFolder",
					"when": "false"
				},
				{
					"command": "cleanupFile",
					"when": "false"
				}
			]
		},
		"configuration": {
			"type": "object",
			"title": "Docs Markdown",
			"properties": {
				"markdown.replaceSmartQuotes": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "When `true`, automatically replace smart quotes (`“, ”, ‘, and ’`) with standard quotes (`\" and '`) in markdown files. This feature extends to other characters as well, i.e.; (`©, ™, ®, •`, subscript and superscript characters). This is useful when pasting text from Word documents."
				},
				"markdown.docsetName": {
					"type": "string",
					"default": "",
					"markdownDescription": "The name of the docset, most often the route segment immediately following the locale in the URL, (i.e.; https://docs.microsoft.com/en-us/azure/ would be 'azure'). Sometimes this value is specified in the `docfx.json` file under the `build/dest` node.",
					"scope": "window"
				},
				"markdown.docsetRootFolderName": {
					"type": "string",
					"default": "",
					"markdownDescription": "The name of the docset root folder. Sometimes this value is specified in the `docfx.json` file under the `build/resource/src` node.",
					"scope": "window"
				},
				"markdown.omitDefaultJsonProperties": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "When `true` omits default JSON values when serializing objects, i.e.; the `.openpublishing.redirection.json` file would have the `redirect_document_id` properties omitted when they are `false`.",
					"scope": "window"
				},
				"markdown.allAvailableLanguages": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Provide all available languages when suggesting code-fence language identifiers. Overrides [Markdown: Docset Languages](#markdown.docsetLanguages) setting."
				},
				"markdown.docsetLanguages": {
					"type": [
						"array",
						"null"
					],
					"title": "Language Identifiers",
					"markdownDescription": "When the [Markdown: All Available Languages](#markdown.allAvailableLanguages) flag is set to `false`, the suggested completion list displayed when typing an opening code-block (` ``` `) is filtered to the provided language identifiers.",
					"items": {
						"type": "string",
						"enum": [
							".NET Core CLI",
							"Apache",
							"ARM assembler",
							"ASPX",
							"ASP.NET (C#)",
							"ASP.NET (VB)",
							"AzCopy",
							"Azure CLI",
							"Azure CLI (Interactive)",
							"Azure Powershell",
							"Azure Powershell (Interactive)",
							"Bash",
							"C",
							"C#",
							"C# (Interactive)",
							"C++",
							"C++/CX",
							"C++/WinRT",
							"CSS",
							"DAX Power BI",
							"DOS",
							"Dockerfile",
							"F#",
							"Go",
							"Gradle",
							"Groovy",
							"HashiCorp Configuration Language (HCL)",
							"HTML",
							"HTTP",
							"Ini",
							"JSON",
							"Java",
							"JavaScript",
							"Kotlin",
							"Kusto",
							"Makefile",
							"Markdown",
							"Managed Object Format",
							"MS Graph (Interactive)",
							"Nginx",
							"Node.js",
							"Objective C",
							"Odata",
							"PHP",
							"PowerApps Formula",
							"PowerShell",
							"PowerShell (Interactive)",
							"Properties",
							"Protocol Buffers",
							"Python",
							"Q#",
							"R",
							"Razor CSHTML",
							"REST API",
							"Ruby",
							"SQL",
							"Scala",
							"Solidity",
							"Swift",
							"Transact-SQL",
							"TypeScript",
							"VB.NET",
							"VB for Applications",
							"VBScript",
							"VSTS CLI",
							"XAML",
							"XML",
							"YAML"
						]
					},
					"minItems": 1,
					"default": null,
					"examples": [
						[
							".NET Core CLI",
							"Azure CLI",
							"C#",
							"CSS",
							"Dockerfile",
							"HTML",
							"JSON",
							"JavaScript",
							"Markdown",
							"Nginx",
							"PowerShell",
							"Protocol Buffers",
							"Razor CSHTML",
							"TypeScript"
						]
					]
				},
				"markdown.showToolbar": {
					"type": "boolean",
					"default": false,
					"description": "Show the legacy toolbar in the bottom status bar.",
					"scope": "window"
				},
				"markdown.addFrontMatterTitle": {
					"type": "boolean",
					"default": true,
					"description": "Used to add the front_matter_title parameter (MD025) to the markdownlint.config file."
				},
				"markdown.alwaysIncludeLocScope": {
					"type": "boolean",
					"default": false,
					"description": "Always include loc-scope for images."
				},
				"markdown.previewFeatures": {
					"type": "boolean",
					"default": false,
					"description": "When enabled, beta features will become available."
				},
				"markdown.allowlistUrl": {
					"type": "string",
					"default": "https://visualauthoringservice.azurewebsites.net/api/AllowLists?code=U5wdjUclcEjFtBndGa3Xa926MYmnfc5VnGzE5sLJATaYVl6lon8SNQ=="
				},
				"markdown.metadataNag": {
					"type": "boolean",
					"default": false,
					"description": "On save prompt to update ms.date if it's not up-to-date"
				}
			}
		},
		"keybindings": [
			{
				"command": "markdownQuickPick",
				"key": "Alt+M",
				"mac": "Alt+M",
				"when": "editorTextFocus"
			},
			{
				"command": "automaticList",
				"key": "enter",
				"mac": "enter",
				"when": "editorTextFocus && editorLangId == markdown && !suggestWidgetVisible && !vim.active && !inSnippetMode"
			},
			{
				"command": "insertNestedList",
				"key": "tab",
				"mac": "tab",
				"when": "editorTextFocus && editorLangId == markdown && !suggestWidgetVisible && !vim.active && !inSnippetMode"
			},
			{
				"command": "formatBold",
				"key": "Alt+D B",
				"mac": "Alt+D B",
				"when": "editorTextFocus && editorLangId == 'markdown' && !vim.active"
			},
			{
				"command": "formatItalic",
				"key": "Alt+D I",
				"mac": "Alt+D I",
				"when": "editorTextFocus && editorLangId == 'markdown' && !vim.active"
			},
			{
				"command": "insertURL",
				"key": "Alt+D K",
				"mac": "Alt+D K",
				"when": "editorTextFocus && editorLangId == 'markdown' && !vim.active"
			},
			{
				"command": "insertLink",
				"key": "Alt+D L",
				"mac": "Alt+D L",
				"when": "editorTextFocus && editorLangId == 'markdown' && !vim.active"
			},
			{
				"command": "previewTopic",
				"key": "Alt+D P",
				"mac": "Alt+D P",
				"when": "editorTextFocus && editorLangId == 'markdown' && !vim.active"
			}
		],
		"yamlValidation": [
			{
				"fileMatch": "toc.yml",
				"url": "./schema/toc.schema.json"
			}
		],
		"snippets": [
			{
				"language": "markdown",
				"path": "./snippets/snippets.json"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "webpack --mode production",
		"webpack": "webpack --mode development",
		"webpack-dev": "webpack --mode development --watch",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"prettier": "prettier --write \"**/*.{ts,js,json,yml}\"",
		"prettier-check": "prettier --check \"**/*.{ts,js,json,yml}\" --loglevel debug",
		"pretest": "npm run compile",
		"test": "node ./out/src/test/runTest.js",
		"lint": "eslint . --ext .ts",
		"precommit": "pretty-quick --staged --pattern \"**/*.{ts,js,json,yml}\"",
		"pre-push": "cd ../.. && yarn run compile && yarn run lint"
	},
	"husky": {
		"hooks": {
			"pre-commit": "pretty-quick --staged --pattern \"**/*.{ts,js,json,yml}\"",
			"pre-push": "yarn run pre-push"
		}
	},
	"dependencies": {
		"adal-node": "^0.2.1",
		"axios": "^0.19.2",
		"child-process-promise": "^2.2.1",
		"diff": "^4.0.2",
		"glob": "^7.1.6",
		"graceful-fs": "^4.2.3",
		"js-yaml": "^3.13.1",
		"lodash.merge": "^4.6.2",
		"matcher": "^1.1.1",
		"recursive-readdir": "^2.2.2",
		"typescript-collections": "^1.3.3",
		"vscode-extension-telemetry": "^0.1.1"
	},
	"devDependencies": {
		"@types/chai": "^4.2.11",
		"@types/chai-spies": "^1.0.1",
		"@types/glob": "^7.1.1",
		"@types/graceful-fs": "^2.0.30",
		"@types/lodash.merge": "^4.6.6",
		"@types/mocha": "^7.0.2",
		"@types/node": "^12.12.32",
		"@types/recursive-readdir": "^2.2.0",
		"@types/vscode": "^1.47.0",
		"@types/yamljs": "^0.2.30",
		"@typescript-eslint/eslint-plugin": "^2.34.0",
		"@typescript-eslint/eslint-plugin-tslint": "^2.34.0",
		"@typescript-eslint/parser": "^2.34.0",
		"chai": "^4.2.0",
		"chai-spies": "^1.0.0",
		"eslint": "^7.1.0",
		"eslint-import-resolver-webpack": "^0.12.1",
		"eslint-plugin-import": "^2.20.2",
		"husky": "^4.2.3",
		"mocha": "^8.0.1",
		"mocha-junit-reporter": "^1.23.3",
		"mock-require": "^3.0.3",
		"nyc": "^15.0.0",
		"octicons": "^7.4.0",
		"prettier": "2.0.5",
		"pretty-quick": "^2.0.1",
		"sinon": "^9.0.1",
		"source-map-support": "^0.5.16",
		"terser-webpack-plugin": "^2.3.5",
		"ts-loader": "^6.2.2",
		"ts-node": "^8.8.1",
		"tslint": "^5.20.1",
		"typescript": "^3.9.6",
		"vscode-test": "^1.3.0",
		"webpack": "^4.42.1",
		"webpack-bundle-analyzer": "^3.6.1",
		"webpack-cli": "^3.3.11"
	},
	"license": "MIT"
}
